
public class Recursividade {

	public static void main(String[] args) {
		/*Na recursicidade, uma funcao chama a si mesma
		 * repetidamente, até atingir uma condição de parada.
		 * No caso de Java, um método chama a si mesmo, passando
		 * para si objetos primitivos. Cada chamada gera uma nova
		 * entrada na pilha da execucao, e alguns dados podem ser
		 * disponibilizados em um escopo global ou loca, através de
		 *  parametros em um escopo global ou local. */
		
		/*Recursividade tem um papel importante em programação
		 * funcional, facilitando que evitemos estados mutáveis e 
		 * mantenhamos nosso programa mais declarativo, e menos 
		 * imperativo.*/
		
		/*Tail Call(Recursividade de cauda): Recurs~]ao em cauda é uma recursão onde não há nenhuma linha
		 * de código após a chamada do próprio método e, sendo assim, não há nenhum tipo de processamento 
		 * a ser feito após a chamada recusiva.
		 * 
		 * Obs: a JVM  nao suporta Tail Call, ele lança um estouro de picha  */
		
		/*Memoization: é uma técnica de otimização que consiste no
		 * cache do resultado de uma função, baseado nos parâmetros
		 * de entrada. Com isso, nas seguintes execuções consequimos
		 * ter uma resposta mais rápida*/
		
		
		

	}
	public int recursividade(int numero) {
		return 0;
	}

}
